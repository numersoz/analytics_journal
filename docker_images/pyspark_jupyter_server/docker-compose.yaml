version: '3'

services:
  hdfs-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.1.3-java8
    container_name: hdfs-namenode
    environment:
      - CLUSTER_NAME=test
    ports:
      - "9870:9870"
      - "8020:8020"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    networks:
      - hadoop

  hdfs-datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.1.3-java8
    container_name: hdfs-datanode
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-namenode:8020
    depends_on:
      - hdfs-namenode
    ports:
      - "9864:9864"
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    networks:
      - hadoop

  spark-master:
    build:
      context: .
      dockerfile: Dockerfile.spark
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-namenode:8020
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - hadoop

  spark-worker:
    build:
      context: .
      dockerfile: Dockerfile.spark
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-namenode:8020
    depends_on:
      - spark-master
      - hdfs-namenode
    networks:
      - hadoop

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    container_name: jupyter-lab
    ports:
      - "8888:8888"
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://hdfs-namenode:8020
    depends_on:
      - spark-master
      - spark-worker
      - hdfs-namenode
    networks:
      - hadoop

networks:
  hadoop:
    driver: bridge

volumes:
  hadoop_namenode:
  hadoop_datanode:
